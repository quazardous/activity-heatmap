class ActivityHeatmap{constructor(t,e={},o="yearly"){this.data=t,this.profile=o,this.__options(e)}render(){this.init();let t=this.svg();this.options.frame&&this.renderFrame(t),this.options.debug&&this.renderBlueprints(t),this.renderHeatmap(t),this.options.histogram&&this.renderHistogram(t)}renderHeatmap(t){this.geometry.heatmap.box.width,this.geometry.heatmap.box.height;let e=this.geometry.heatmap.box.left,o=this.geometry.heatmap.box.top,i=this.geometry.square.width+this.geometry.square.padding,s=this.geometry.square.height+this.geometry.square.padding,a=d3.scaleLinear().range(this.options.colors.scale).domain(this.heatmap.scale),r=t.append("g").attr("class","heatmap").selectAll(".cell").data(this.heatmap.data),h=r.enter().append("rect").attr("class","cell").attr("width",this.geometry.square.width).attr("height",this.geometry.square.height).attr("fill",t=>a(t.value)).attr("x",t=>t.ci*i+e).attr("y",t=>t.ri*s+o);this.options.tooltip&&h.merge(r).on("mouseover",(t,a)=>{this.tooltip=d3.select(this.options.selector).append("div").attr("class","heatmap-tooltip").html(this.tooltipHTML(t.value,moment(t.date).format(this.options.tooltip.heatmap))).style("left",()=>t.ci*i+e+this.geometry.tooltip.left+"px").style("top",()=>t.ri*s+o+this.geometry.tooltip.top+"px")}).on("mouseout",(t,e)=>{this.tooltip.remove()}),r.exit().remove(),this.options.legend&&this.renderLegend(t,this.heatmap.scale,this.geometry.heatmap.legend),this.options.labels.cols&&this.renderColsLabels(t),this.options.labels.rows&&this.renderRowsLabels(t)}renderHistogram(t){this.geometry.histogram.box.width;let e=this.geometry.histogram.box.height,o=this.geometry.histogram.box.left,i=this.geometry.histogram.box.top,s=this.geometry.square.width+this.geometry.square.padding,a=d3.scaleLinear().range(this.options.colors.scale).domain(this.histogram.scale),r=t.append("g").attr("class","histogram").selectAll(".bar").data(this.histogram.data),h=t=>Math.abs(this.histogram.scale[1]-this.histogram.scale[0])?e*Math.abs(t.value-this.histogram.scale[0])/Math.abs(this.histogram.scale[1]-this.histogram.scale[0]):0,l=r.enter().append("rect").attr("class","bar").attr("width",this.geometry.square.width).attr("height",h).attr("fill",t=>a(t.value)).attr("x",t=>t.i*s+o).attr("y",t=>e+i-h(t));this.options.tooltip&&l.merge(r).on("mouseover",(t,e)=>{this.tooltip=d3.select(this.options.selector).append("div").attr("class","heatmap-tooltip").html(this.tooltipHTML(t.value,moment(t.date).format(this.options.tooltip.histogram))).style("left",()=>t.i*s+o+this.geometry.tooltip.left+"px").style("top",()=>i+this.geometry.tooltip.top+"px")}).on("mouseout",(t,e)=>{this.tooltip.remove()}),r.exit().remove(),this.options.legend&&this.renderLegend(t,this.histogram.scale,this.geometry.histogram.legend)}renderLegend(t,e,o){o.box.width;let i=o.box.height,s=o.box.left,a=o.box.top,r=d3.scaleLinear().range(this.options.colors.scale).domain(e),h=this.linearRange(e[1],e[0],i),l=t.append("g");l.attr("class","legend"),l.selectAll(".legend-step").data(h).enter().append("rect").attr("class","legend-step").attr("width",o.width).attr("height",1).attr("x",s).attr("y",(t,e)=>e+a).attr("fill",t=>r(t)),l.append("text").attr("class","high").attr("font-size",this.options.fontSize).attr("x",s+o.width+o.label.padding).attr("y",this.options.fontSize+a).text(e[1]),l.append("text").attr("class","high").attr("font-size",this.options.fontSize).attr("x",s+o.width+o.label.padding).attr("y",i+a).text(e[0])}renderColsLabels(t){let e=this.geometry.labels.cols.box.width,o=this.geometry.labels.cols.box.height,i=this.geometry.labels.cols.box.left,s=this.geometry.labels.cols.box.top,a=t.append("g");a.attr("class","cols-labels");let r=this.prepareLabelsSpecs(this.options.labels.cols,"cols"),h=this.prepareLabelsData(r),l=a.selectAll(".col-label").data(h).enter();if(r.separator){let t=s+o;this.options.histogram&&(t=this.geometry.histogram.box.top+this.geometry.histogram.box.height);let a=t=>e*t.i/r.length+i;l.append("line").style("stroke",r.separator.color).style("stroke-width",r.separator.thickness).attr("x1",a).attr("y1",this.geometry.heatmap.box.top).attr("x2",a).attr("y2",t)}l.append("text").attr("class","col-label").attr("font-size",this.options.fontSize).attr("height",o).attr("x",t=>e*t.i/r.length+i+(r.separator?1:0)).attr("y",s+o).text(r.label)}renderRowsLabels(t){this.geometry.labels.rows.box.width;let e=this.geometry.labels.rows.box.left,o=this.geometry.labels.rows.box.top,i=this.geometry.labels.rows.box.height,s=t.append("g");s.attr("class","rows-labels");let a=this.prepareLabelsSpecs(this.options.labels.rows,"rows"),r=this.prepareLabelsData(a),h=s.selectAll(".row-label").data(r).enter();if(a.separator){let t=t=>ch*t.i/a.length+o;h.append("line").style("stroke",a.separator.color).style("stroke-width",a.separator.thickness).attr("x1",e).attr("y1",t).attr("x2",this.geometry.heatmap.box.left).attr("y2",t)}h.append("text").attr("class","row-label").attr("text-anchor","end").attr("font-size",this.options.fontSize).attr("width",this.geometry.labels.rows.label.width).attr("height",i/a.length).attr("x",e+this.geometry.labels.rows.label.width).attr("y",t=>i*t.i/a.length+o+this.geometry.square.height).text(t=>t.label)}renderFrame(t){t.append("rect").style("stroke",this.options.colors.frame).style("fill-opacity","0.0").style("stroke-width","1").attr("width",this.geometry.width).attr("height",this.geometry.height).attr("x",0).attr("y",0)}renderBlueprints(t){let e=t.append("g").attr("class","blueprints").style("stroke","blue").style("stroke-opacity","0.5").style("fill-opacity","0.0").style("stroke-width","2").style("stroke-dasharray","5,5");e.append("rect").attr("width",this.geometry.width).attr("height",this.geometry.height).attr("x",0).attr("y",0),e.append("rect").attr("width",this.geometry.heatmap.box.width).attr("height",this.geometry.heatmap.box.height).attr("x",this.geometry.heatmap.box.left).attr("y",this.geometry.heatmap.box.top),this.options.histogram&&e.append("rect").attr("width",this.geometry.histogram.box.width).attr("height",this.geometry.histogram.box.height).attr("x",this.geometry.histogram.box.left).attr("y",this.geometry.histogram.box.top),this.options.legend&&(e.append("rect").attr("width",this.geometry.heatmap.legend.box.width).attr("height",this.geometry.heatmap.legend.box.height).attr("x",this.geometry.heatmap.legend.box.left).attr("y",this.geometry.heatmap.legend.box.top),this.options.histogram&&e.append("rect").attr("width",this.geometry.histogram.legend.box.width).attr("height",this.geometry.histogram.legend.box.height).attr("x",this.geometry.histogram.legend.box.left).attr("y",this.geometry.histogram.legend.box.top)),this.options.labels.cols&&e.append("rect").attr("width",this.geometry.labels.cols.box.width).attr("height",this.geometry.labels.cols.box.height).attr("x",this.geometry.labels.cols.box.left).attr("y",this.geometry.labels.cols.box.top),this.options.labels.rows&&e.append("rect").attr("width",this.geometry.labels.rows.box.width).attr("height",this.geometry.labels.rows.box.height).attr("x",this.geometry.labels.rows.box.left).attr("y",this.geometry.labels.rows.box.top)}svg(){return d3.select(this.options.selector).selectAll("svg.calendar-heatmap").remove(),d3.select(this.options.selector).style("position","relative").append("svg").attr("class","container-heatmap").attr("width",this.geometry.width).attr("height",this.geometry.height)}tooltipHTML(t,e){return null==e&&(e=""),`<span><strong>${t}</strong> ${e}</span>`}timeRange(t,e,o){switch(o){case"year":return d3.timeYears(t,e);case"month":return d3.timeMonths(t,e);case"week":return d3.timeWeeks(t,e);case"day":return d3.timeDays(t,e);case"hour":return d3.timeHours(t,e)}}fullHeatmapStruct(t){return null==(t=Object.assign(t,this.options.struct(t))).ci&&(t.ci=this.heatmap.cols.findIndex(e=>e.valueOf()===t.col.valueOf())),null==t.col&&(t.col=this.heatmap.cols[t.ci]),null==t.ri&&(t.ri=this.heatmap.rows.findIndex(e=>e.valueOf()===t.row.valueOf())),null==t.row&&(t.row=this.heatmap.rows[t.ri]),t}init(){this.initOptions(),this.initHeatmap(),this.options.histogram&&this.initHistogram(),this.initGeometry()}initOptions(){this.options.period.from||this.options.period.to||(this.options.period.to=moment().toDate()),Array.isArray(this.options.period.range)||(this.options.period.range=[this.options.period.range,"days"]),this.options.period.from||(this.options.period.from=moment(this.options.period.to).subtract(...this.options.period.range).toDate()),this.options.period.to||(this.options.period.to=moment(this.options.period.from).add(...this.options.period.range).toDate()),this.options.period.from=moment(this.options.period.from).startOf(this.options.period.granularity.col).startOf(this.options.period.granularity.cell).toDate(),this.options.period.to=moment(this.options.period.to).endOf(this.options.period.granularity.col).endOf(this.options.period.granularity.cell).toDate(),this.options.debug&&console.log(this.options)}initGeometry(){if(this.geometry=this.options.geometry,!isNaN(this.geometry.margin)){let t=this.geometry.margin;this.geometry.margin={top:t,bottom:t,left:t,right:t}}this.geometry.heatmap.box.width||(this.geometry.heatmap.box.width=this.heatmap.cols.length*(this.geometry.square.width+this.geometry.square.padding)-this.geometry.square.padding),this.geometry.heatmap.box.height||(this.geometry.heatmap.box.height=this.heatmap.rows.length*(this.geometry.square.height+this.geometry.square.padding)-this.geometry.square.padding),this.options.histogram&&(this.geometry.histogram.box.width=this.geometry.heatmap.box.width),this.options.legend&&(this.geometry.heatmap.legend.width=this.geometry.square.width,this.geometry.heatmap.legend.box.width=this.geometry.heatmap.legend.width+this.geometry.heatmap.legend.box.padding+this.geometry.heatmap.legend.label.width,this.geometry.heatmap.legend.box.height=this.geometry.heatmap.box.height,this.options.histogram&&(this.geometry.histogram.legend.width=this.geometry.square.width,this.geometry.histogram.legend.box.width=this.geometry.histogram.legend.width+this.geometry.histogram.legend.box.padding+this.geometry.histogram.legend.label.width,this.geometry.histogram.legend.box.height=this.geometry.histogram.box.height)),this.options.labels.cols&&(this.geometry.labels.cols.box.width=this.geometry.heatmap.box.width,this.geometry.labels.cols.box.height=this.geometry.labels.cols.label.height),this.options.labels.rows&&(this.geometry.labels.rows.box.width=this.geometry.labels.rows.label.width,this.geometry.labels.rows.box.height=this.geometry.heatmap.box.height),this.geometry.heatmap.box.left=this.geometry.margin.left,this.geometry.heatmap.box.top=this.geometry.margin.top;let t=this.geometry.heatmap.box.top+this.geometry.heatmap.box.height;if(this.options.labels.rows&&(this.geometry.heatmap.box.left+=this.geometry.labels.rows.box.width+this.geometry.labels.rows.box.padding),this.options.labels.cols&&(this.geometry.labels.cols.box.left=this.geometry.heatmap.box.left,this.geometry.labels.cols.box.top=t+this.geometry.labels.cols.box.padding,t+=this.geometry.labels.cols.box.padding+this.geometry.labels.cols.box.height),this.options.labels.rows&&(this.geometry.labels.rows.box.left=this.geometry.margin.left,this.geometry.labels.rows.box.top=this.geometry.heatmap.box.top),this.options.histogram&&(this.geometry.histogram.box.left=this.geometry.heatmap.box.left,this.geometry.histogram.box.top=t+this.geometry.histogram.box.padding,t+=this.geometry.histogram.box.padding+this.geometry.histogram.box.height),this.options.legend&&(this.geometry.heatmap.legend.box.left=this.geometry.heatmap.box.left+this.geometry.heatmap.box.width+this.geometry.heatmap.legend.box.padding,this.geometry.heatmap.legend.box.top=this.geometry.heatmap.box.top,this.options.histogram&&(this.geometry.histogram.legend.box.left=this.geometry.histogram.box.left+this.geometry.histogram.box.width+this.geometry.histogram.legend.box.padding,this.geometry.histogram.legend.box.top=this.geometry.histogram.box.top)),!this.geometry.width&&(this.geometry.width=this.geometry.heatmap.box.width+this.geometry.margin.left+this.geometry.margin.right,this.options.labels.rows&&(this.geometry.width+=this.geometry.labels.rows.box.width+this.geometry.labels.rows.box.padding),this.options.legend)){let t=this.geometry.heatmap.legend.box.width+this.geometry.heatmap.legend.box.padding;this.options.histogram&&(t=Math.max(t,this.geometry.histogram.legend.box.width+this.geometry.histogram.legend.box.padding)),this.geometry.width+=t}this.geometry.height||(this.geometry.height=this.geometry.heatmap.box.height+this.geometry.margin.top+this.geometry.margin.bottom,this.options.labels.cols&&(this.geometry.height+=this.geometry.labels.cols.box.height+this.geometry.labels.cols.box.padding),this.options.histogram&&(this.geometry.height+=this.geometry.histogram.box.height+this.geometry.histogram.box.padding)),this.options.debug&&console.log(this.geometry)}initHeatmap(){this.heatmap={cols:"function"==typeof this.options.cols?this.options.cols():this.options.cols,rows:"function"==typeof this.options.rows?this.options.rows():this.options.rows},this.heatmap.ciri2i=((t,e)=>e*this.heatmap.cols.length+t),this.heatmap.d2i=(t=>{if(null!=t.i)return t.i;let e=t.ci;null==e&&(e=this.heatmap.cols.findIndex(e=>e.valueOf()===t.col.valueOf()));let o=t.ri;return null==o&&(o=this.heatmap.rows.findIndex(e=>e.valueOf()===t.col.valueOf())),e>=0&&o>=0?this.heatmap.ciri2i(e,o):-1}),this.heatmap.data=this.timeRange(this.options.period.from,this.options.period.to,this.options.period.granularity.cell),this.heatmap.data.forEach((t,e,o)=>{o[e]=this.fullHeatmapStruct({date:t,value:0,i:e})}),this.data.forEach(t=>{let e=this.options.struct(t),o=this.heatmap.d2i(e);this.heatmap.data[o]&&(this.heatmap.data[o].value+=e.value)}),this.heatmap.scale=[...this.options.scale],null==this.heatmap.scale[0]&&(this.heatmap.scale[0]=d3.min(this.heatmap.data,t=>t.value)),null==this.heatmap.scale[1]&&(this.heatmap.scale[1]=d3.max(this.heatmap.data,t=>t.value)),this.options.debug&&console.log(this.heatmap)}initHistogram(){this.histogram={},this.histogram.data=this.timeRange(this.options.period.from,this.options.period.to,this.options.period.granularity.col),this.histogram.data.forEach((t,e,o)=>{o[e]={date:t,value:0,i:e}}),this.heatmap.data.forEach(t=>{this.histogram.data[t.ci].value+=t.value}),this.histogram.scale=[...this.options.scale],null==this.histogram.scale[0]&&(this.histogram.scale[0]=d3.min(this.histogram.data,t=>t.value)),null==this.histogram.scale[1]&&(this.histogram.scale[1]=d3.max(this.histogram.data,t=>t.value))}__options(t,e){("string"==typeof t||t instanceof String)&&(t={selector:t});let o={debug:!1,selector:null,legend:!0,histogram:!0,frame:!0,geometry:{width:null,height:null,heatmap:{box:{},legend:{box:{padding:5},label:{padding:5,width:20}}},histogram:{box:{padding:10,height:50},legend:{box:{padding:5},label:{padding:5,width:20}}},square:{width:11,height:11,padding:2},tooltip:{left:0,top:-30},labels:{cols:{box:{padding:5},label:{width:20,height:10}},rows:{box:{padding:5},label:{width:20,height:10}}},margin:10},period:{from:null,to:null,range:null,granularity:{cell:null,col:null}},scale:[null,null],colors:{separator:"#AAAAAA",frame:"#AAAAAA",scale:["#D8E6E7","#218380"]},struct:t=>({}),cols:null,rows:null,labels:{cols:null,rows:null},fontSize:10};switch(this.profile){case"yearly":o.tooltip={heatmap:"ddd, MMM Do YYYY",histogram:"[Week] w YYYY"},o.period.range=[1,"year"],o.period.granularity.cell="day",o.period.granularity.col="week",o.struct=(t=>({i:+moment(t.date).diff(moment(this.options.period.from),this.options.period.granularity.cell),col:moment(t.date).startOf(this.options.period.granularity.col).startOf(this.options.period.granularity.cell).toDate(),ri:+t.date.getDay(),value:t.value})),o.cols=(()=>this.timeRange(this.options.period.from,this.options.period.to,this.options.period.granularity.col)),o.rows=["Sn","M","T","We","Th","F","S"],o.labels={cols:{granularity:"week",label:t=>moment(t.date).endOf("week").format("MMM"),display:t=>moment(t.date).endOf("week").isSame(moment(t.date).endOf("week").startOf("month"),"week"),separator:!0},rows:!0};break;case"monthly":o.tooltip={heatmap:"YYYY-MM-DD hh:mm",histogram:"ddd, MMM Do YYYY"},o.period.range=[1,"month"],o.period.granularity.cell="hour",o.period.granularity.col="day",o.struct=(t=>({i:+moment(t.date).diff(moment(this.options.period.from),this.options.period.granularity.cell),col:moment(t.date).startOf(this.options.period.granularity.col).startOf(this.options.period.granularity.cell).toDate(),ri:+t.date.getHours(),value:t.value})),o.cols=(()=>this.timeRange(this.options.period.from,this.options.period.to,this.options.period.granularity.col)),o.rows=[...Array(24).keys()],o.labels={cols:{granularity:"day",label:t=>moment(t.date).date(),display:t=>0==moment(t.date).day(),separator:!0},rows:!0}}t=mergeDeep(o,t),this.options=t}linearRange(t,e,o){let i=[];for(let s=0;s<o;s++)i.push(t+(e-t)*s/(o-1));return i}prepareLabelsSpecs(t,e){if(!0===t)switch(t={who:e},e){case"rows":t.data=this.heatmap.rows;break;case"cols":t.data=this.heatmap.cols}else Array.isArray(t)?(t={who:e}).data=t:t.who=e;return t.separator&&(!0===t.separator&&(t.separator={}),t.separator.color=null!=t.separator.color?t.separator.color:this.options.colors.separator,t.separator.thickness=null!=t.separator.thickness?t.separator.thickness:1),t}prepareLabelsData(t){let e;if(t.granularity?(e=this.timeRange(this.options.period.from,this.options.period.to,t.granularity)).forEach((t,e,o)=>{o[e]={date:t,i:e}}):t.data&&(e=t.data).forEach((t,e,o)=>{o[e]={label:t,i:e}}),t.length=e.length,t.display){let o=[];e.forEach(e=>{t.display(e)&&o.push(e)}),e=o}return e}}function mergeDeep(...t){const e=t=>t&&"object"==typeof t;return t.reduce((t,o)=>(Object.keys(o).forEach(i=>{const s=t[i],a=o[i];Array.isArray(s)&&Array.isArray(a)?t[i]=a:e(s)&&e(a)?t[i]=mergeDeep(s,a):t[i]=a}),t),{})}